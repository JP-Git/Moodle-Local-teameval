{"version":3,"sources":["../src/formparse.js"],"names":["define","$","getPath","str","path","m","exec","push","x","bracket","setValue","obj","value","key","shift","length","nextKey","newVal","parseInt","fixCheckboxes","form","array","unchecked","find","map","name","get","output","i","field","indexOf","options","Object","assign","serializeArray","object"],"mappings":"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","sourcesContent":["define(['jquery'], function($) {\n\n    // Matches the field name + any square brackets\n    var a = /([^\\[\\]]+)((?:\\[[^\\[\\]]*\\])+)?/;\n    // Matches the values in square brackets\n    var b = /\\[([^\\[\\]]*)\\]/g;\n\n    function getPath(str) {\n        var path = [];\n        var m = a.exec(str);\n        if (m) {\n            path.push(m[1]);\n            if (m[2]) {\n                var x;\n\t\t// Track bracketed variable.\n\t\tvar bracket = m[2];\n                while((x = b.exec(bracket))) {\n                    path.push(x[1]);\n\t\t    // Track result of bracketed variable regex.\n\t\t    bracket = x[1];\n                }\n            }\n        }\n        return path;\n    }\n\n    function setValue(obj, path, value) {\n        var key = path.shift();\n        if (path.length > 0) {\n            if (key === '' || !obj[key]) {\n                var nextKey = path[0];\n                var newVal = {};\n                if ((nextKey === '') || (parseInt(nextKey) == nextKey)) { //nextKey is an integer\n                    newVal = [];\n                }\n                setValue(newVal, path, value);\n                if (key === '') {\n                    obj.push(newVal);\n                } else {\n                    obj[key] = newVal;\n                }\n            } else {\n                setValue(obj[key], path, value);\n            }\n        } else {\n            if (key === '') {\n                obj.push(value);\n            } else {\n                obj[key] = value;\n            }\n        }\n    }\n\n    function fixCheckboxes(form, array) {\n        var unchecked = $(form).find('input[type=checkbox]:not(:checked)').map(function() { return this.name; }).get();\n        var output = [];\n        for (var i = 0; i < array.length; i++) {\n            var field = array[i];\n            if (unchecked.indexOf(field.name) !== -1) {\n                continue;\n            } else {\n                output.push(field);\n            }\n        }\n        return output;\n    }\n\n    function serializeObject(form, options) {\n        options = Object.assign({\n            fixCheckboxes: false\n        }, options);\n\n        var array = $(form).serializeArray();\n\n        if (options.fixCheckboxes) {\n            array = fixCheckboxes(form, array);\n        }\n\n        var object = {};\n        for (var i = 0; i < array.length; i++) {\n            var field = array[i];\n            setValue(object, getPath(field.name), field.value);\n        }\n        return object;\n    }\n\n    return {\n        'getPath': getPath,\n        'setValue': setValue,\n        'serializeObject': serializeObject\n    };\n\n});\n"],"file":"formparse.min.js"}